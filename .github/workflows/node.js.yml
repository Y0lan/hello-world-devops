name: Node.js CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  front:
   runs-on: ubuntu-latest
   strategy:
     matrix:
       node-version: [8.x]
   steps:
   -
     name: Checkout
     uses: actions/checkout@v2
   -
     name: Use Node.js ${{ matrix.node-version }}
     uses: actions/setup-node@v1
     with:
       node-version: ${{ matrix.node-version }}
   -
     name: Install, Tests & build
     run: |
       npm install
       npm test
       npm run-script build
   -
     name: Docker build image front
     run: docker build -t yolanmq/front-devops-project:latest -f Dockerfile.front .
   -
     name: Docker push image front
     run: |
       echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login $DOCKER_REGISTRY --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
       docker push yolanmq/front-devops-project:latest

  back:
   runs-on: ubuntu-latest
   strategy:
     matrix:
       node-version: [8.x]
   steps:
     -
       name: Checkout
       uses: actions/checkout@v2
     -
       name: Use Node.js ${{ matrix.node-version }}
       uses: actions/setup-node@v1
       with:
         node-version: ${{ matrix.node-version }}
     -
       name: Install & Tests
       run: |
         npm install
         npm test
     -
       name: Docker build image back
       run: docker build -t yolanmq/back-devops-project:latest -f Dockerfile.back .
     -
       name: Docker push image back
       run: |
         echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login $DOCKER_REGISTRY --username ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
         docker push yolanmq/back-devops-project:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [front, back]

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Terraform setup
        uses: hashicorp/setup-terraform@v1.2.1
      -
        name: Terraform init & apply
        run: |
          echo "${{ secrets.SSH_SECRET_KEY }}" > private_key
          eval `ssh-agent -s`
          chmod 500 private_key
          ssh-add private_key
          cd scaleway-terraform/
          export SCALEWAY_ORGANIZATION=${{ secrets.SCALEWAY_ORGANIZATION }}
          export SCW_ACCESS_KEY=${{ secrets.SCW_ACCESS_KEY }}
          export SCW_SECRET_KEY=${{ secrets.SCW_SECRET_KEY }}
          terraform init
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -q -i ../private_key yolan@triton.whatbox.ca:/home/yolan/terraform/terraform.tfstate terraform.tfstate
          terraform destroy -auto-approve
          terraform apply -auto-approve
          scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -q -i ../private_key terraform.tfstate yolan@triton.whatbox.ca:/home/yolan/terraform/terraform.tfstate


